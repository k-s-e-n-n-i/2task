(()=>{"use strict";var r={4800:(r,t,o)=>{o.d(t,{Z:()=>c});var e=o(4015),n=o.n(e),i=o(3645),l=o.n(i)()(n());l.push([r.id,".start-page{padding:80px 8.4%}.start-page .start-page__links{display:flex;flex-direction:column}body{margin:0;padding:0;font-family:Montserrat, Arial, sans-serif;font-style:normal;font-weight:normal;font-size:13.7px;line-height:24px;color:rgba(31,32,65,0.75);min-width:320px}h1{font-family:Montserrat, Arial, sans-serif;font-size:24px;line-height:30px}h2{font-family:Montserrat, Arial, sans-serif;font-size:19px;line-height:24px}h3{font-family:Montserrat, Arial, sans-serif;font-size:12px;line-height:15px;text-transform:uppercase}h1,h2,h3{margin:0}body,p{font-family:Montserrat, Arial, sans-serif;font-style:normal;font-weight:normal;font-size:14px;line-height:24px}\n","",{version:3,sources:["webpack://./src/index.scss"],names:[],mappings:"AAAA,YACE,iBAAkB,CADpB,+BAII,YAAa,CACb,qBAAsB,CACvB,KAID,QAAS,CACT,SAAU,CACV,yCAA0C,CAC1C,iBAAkB,CAClB,kBAAmB,CACnB,gBAAiB,CACjB,gBAAiB,CACjB,yBAA6B,CAC7B,eAAgB,CACjB,GAGC,yCAA0C,CAC1C,cAAe,CACf,gBAAiB,CAClB,GAGC,yCAA0C,CAC1C,cAAe,CACf,gBAAiB,CAClB,GAGC,yCAA0C,CAC1C,cAAe,CACf,gBAAiB,CACjB,wBAAyB,CAC1B,SAGC,QAAS,CACV,OAGC,yCAA0C,CAC1C,iBAAkB,CAClB,kBAAmB,CACnB,cAAe,CACf,gBAAiB",sourcesContent:[".start-page{\r\n  padding: 80px 8.4%;\r\n\r\n  .start-page__links{\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n}\r\n\r\nbody{\r\n  margin: 0;\r\n  padding: 0;\r\n  font-family: Montserrat, Arial, sans-serif;\r\n  font-style: normal;\r\n  font-weight: normal;\r\n  font-size: 13.7px;\r\n  line-height: 24px;\r\n  color: rgba(31, 32, 65, 0.75);\r\n  min-width: 320px;\r\n}\r\n\r\nh1{\r\n  font-family: Montserrat, Arial, sans-serif;\r\n  font-size: 24px;\r\n  line-height: 30px;\r\n}\r\n\r\nh2{\r\n  font-family: Montserrat, Arial, sans-serif;\r\n  font-size: 19px;\r\n  line-height: 24px;\r\n}\r\n\r\nh3{\r\n  font-family: Montserrat, Arial, sans-serif;\r\n  font-size: 12px;\r\n  line-height: 15px;\r\n  text-transform: uppercase;\r\n}\r\n\r\nh1,h2,h3{\r\n  margin: 0;\r\n}\r\n\r\nbody,p{\r\n  font-family: Montserrat, Arial, sans-serif;\r\n  font-style: normal;\r\n  font-weight: normal;\r\n  font-size: 14px;\r\n  line-height: 24px;\r\n}\r\n"],sourceRoot:""}]);const c=l},5266:(r,t,o)=>{o.d(t,{Z:()=>c});var e=o(4015),n=o.n(e),i=o(3645),l=o.n(i)()(n());l.push([r.id,".ui-kit-color-type{display:flex;justify-content:space-between;padding:100px 140px 131px;position:relative;width:1440px;box-sizing:border-box}.ui-kit-color-type .ui-kit-color-type__link-logo{position:absolute;width:48px;height:48px;left:31px;top:30px}.ui-kit-color-type .ui-kit-color-type__link-logo .ui-kit-color-type__ico-logo{position:absolute}.ui-kit-color-type .ui-kit-color-type__block-colors{display:flex;flex-direction:column;margin:35px 0 0 0;min-width:300px}.ui-kit-color-type .ui-kit-color-type__block-colors .ui-kit-color-type__item-color{display:flex;align-items:center}.ui-kit-color-type .ui-kit-color-type__block-colors .ui-kit-color-type__item-color .ui-kit-color-type__color{display:flex;width:70px;height:70px;border-radius:6px;margin:10px 40px 10px 10px}.ui-kit-color-type .ui-kit-color-type__block-colors .ui-kit-color-type__item-color .ui-kit-color-type__color.ui-kit-color-type__color_dark-shade-100{background:#1f2041}.ui-kit-color-type .ui-kit-color-type__block-colors .ui-kit-color-type__item-color .ui-kit-color-type__color.ui-kit-color-type__color_dark-shade-75{background:rgba(31,32,65,0.75)}.ui-kit-color-type .ui-kit-color-type__block-colors .ui-kit-color-type__item-color .ui-kit-color-type__color.ui-kit-color-type__color_dark-shade-50{background:rgba(31,32,65,0.5)}.ui-kit-color-type .ui-kit-color-type__block-colors .ui-kit-color-type__item-color .ui-kit-color-type__color.ui-kit-color-type__color_dark-shade-25{background:rgba(31,32,65,0.25)}.ui-kit-color-type .ui-kit-color-type__block-colors .ui-kit-color-type__item-color .ui-kit-color-type__color.ui-kit-color-type__color_dark-shade-5{background:rgba(31,32,65,0.05)}.ui-kit-color-type .ui-kit-color-type__block-colors .ui-kit-color-type__item-color .ui-kit-color-type__color.ui-kit-color-type__color_purple{background:#BC9CFF}.ui-kit-color-type .ui-kit-color-type__block-colors .ui-kit-color-type__item-color .ui-kit-color-type__color.ui-kit-color-type__color_green{background:#6FCF97}.ui-kit-color-type .ui-kit-color-type__block-colors .ui-kit-color-type__item-color .ui-kit-color-type__block-text{line-height:29px}.ui-kit-color-type .ui-kit-color-type__block-colors .ui-kit-color-type__item-color .ui-kit-color-type__block-text .ui-kit-color-type__color-topic{margin-bottom:2px;font-size:20px}.ui-kit-color-type .ui-kit-color-type__block-colors .ui-kit-color-type__item-color .ui-kit-color-type__block-text .ui-kit-color-type__color-label{font-weight:normal;margin-top:3px}.ui-kit-color-type .ui-kit-color-type__block-types{display:flex;flex-direction:column;margin-top:19px;min-width:200px}.ui-kit-color-type .ui-kit-color-type__block-types .ui-kit-color-type__item-type{display:flex;margin:25px 0}.ui-kit-color-type .ui-kit-color-type__block-types .ui-kit-color-type__item-type .ui-kit-color-type__type-tag{display:flex;color:rgba(31,32,65,0.25);margin-right:30px;font-family:Montserrat, Arial, sans-serif;width:40px;justify-content:flex-end;align-items:left}.ui-kit-color-type .ui-kit-color-type__block-types .ui-kit-color-type__item-type .ui-kit-color-type__type-text{width:387px}.ui-kit-color-type .ui-kit-color-type__block-types .ui-kit-color-type__item-type h1.ui-kit-color-type__type-text{font-size:25.5px}.ui-kit-color-type .ui-kit-color-type__block-types .ui-kit-color-type__item-type h2.ui-kit-color-type__type-text{font-size:20px}.ui-kit-color-type .ui-kit-color-type__block-types .ui-kit-color-type__item-type h3.ui-kit-color-type__type-text{font-size:12.5px}.ui-kit-color-type .ui-kit-color-type__block-types .ui-kit-color-type__item-type p{margin:-1px 0}.ui-kit-color-type .ui-kit-color-type__block-types .ui-kit-color-type__item-type p.ui-kit-color-type__type-text{width:315px}\n","",{version:3,sources:["webpack://./src/pages/ui-kit-color-type/ui-kit-color-type.scss"],names:[],mappings:"AAQA,mBACE,YAAa,CACb,6BAA8B,CAC9B,yBAA0B,CAC1B,iBAAkB,CAClB,YAAa,CACb,qBAAsB,CANxB,iDASI,iBAAiB,CACjB,UAAW,CACX,WAAY,CACZ,SAAU,CACV,QAAS,CAbb,8EAgBM,iBAAkB,CAhBxB,oDAqBI,YAAa,CACb,qBAAsB,CACtB,iBAAkB,CAClB,eAAgB,CAxBpB,mFA2BM,YAAa,CACb,kBAAmB,CA5BzB,6GA+BQ,YAAa,CACb,UAAW,CACX,WAAY,CACZ,iBAAkB,CAClB,0BAA2B,CAnCnC,qJAsCU,kBA9C6B,CAQvC,oJA0CU,8BAjD+B,CAOzC,oJA8CU,6BApD8B,CAMxC,oJAkDU,8BAvD+B,CAKzC,mJAsDU,8BA1D8B,CAIxC,6IA0DU,kBA7DW,CAGrB,4IA8DU,kBAhEU,CAEpB,kHAmEQ,gBAAiB,CAnEzB,kJAsEU,iBAAkB,CAClB,cAAe,CAvEzB,kJA2EU,kBAAmB,CACnB,cAAe,CA5EzB,mDAmFI,YAAa,CACb,qBAAsB,CACtB,eAAgB,CAChB,eAAgB,CAtFpB,iFAyFM,YAAa,CACb,aAAc,CA1FpB,8GA6FQ,YAAa,CACb,yBAA6B,CAC7B,iBAAkB,CAClB,yCAA0C,CAC1C,UAAW,CACX,wBAAyB,CACzB,gBAAiB,CAnGzB,+GAuGQ,WAAY,CAvGpB,iHA6GU,gBAAiB,CA7G3B,iHAoHU,cAAe,CApHzB,iHA2HU,gBAAiB,CA3H3B,mFAgIQ,aAAc,CAhItB,gHAmIU,WAAY",sourcesContent:["$colorDarkShade100: rgba(31, 32, 65, 1) ;\r\n$colorDarkShade75: rgba(31, 32, 65, 0.75);\r\n$colorDarkShade50: rgba(31, 32, 65, 0.5);\r\n$colorDarkShade25: rgba(31, 32, 65, 0.25);\r\n$colorDarkShade5: rgba(31, 32, 65, 0.05);\r\n$colorPurple: #BC9CFF;\r\n$colorGreen: #6FCF97;\r\n\r\n.ui-kit-color-type{\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 100px 140px 131px;\r\n  position: relative;\r\n  width: 1440px;\r\n  box-sizing: border-box;\r\n\r\n  .ui-kit-color-type__link-logo{\r\n    position:absolute;\r\n    width: 48px;\r\n    height: 48px;     \r\n    left: 31px;\r\n    top: 30px;\r\n\r\n    .ui-kit-color-type__ico-logo{\r\n      position: absolute;\r\n    }\r\n  }\r\n\r\n  .ui-kit-color-type__block-colors{\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin: 35px 0 0 0;\r\n    min-width: 300px;\r\n\r\n    .ui-kit-color-type__item-color{\r\n      display: flex;\r\n      align-items: center;\r\n\r\n      .ui-kit-color-type__color{\r\n        display: flex;\r\n        width: 70px;\r\n        height: 70px;\r\n        border-radius: 6px;\r\n        margin: 10px 40px 10px 10px;\r\n\r\n        &.ui-kit-color-type__color_dark-shade-100{\r\n          background: $colorDarkShade100;\r\n        }\r\n\r\n        &.ui-kit-color-type__color_dark-shade-75{\r\n          background: $colorDarkShade75;\r\n        }\r\n\r\n        &.ui-kit-color-type__color_dark-shade-50{\r\n          background: $colorDarkShade50;\r\n        }\r\n\r\n        &.ui-kit-color-type__color_dark-shade-25{\r\n          background: $colorDarkShade25;\r\n        }\r\n\r\n        &.ui-kit-color-type__color_dark-shade-5{\r\n          background: $colorDarkShade5;\r\n        }\r\n\r\n        &.ui-kit-color-type__color_purple{\r\n          background: $colorPurple;\r\n        }\r\n\r\n        &.ui-kit-color-type__color_green{\r\n          background: $colorGreen;\r\n        }\r\n      }\r\n\r\n      .ui-kit-color-type__block-text{\r\n        line-height: 29px;\r\n\r\n        .ui-kit-color-type__color-topic{\r\n          margin-bottom: 2px;\r\n          font-size: 20px;\r\n        }\r\n\r\n        .ui-kit-color-type__color-label{\r\n          font-weight: normal;\r\n          margin-top: 3px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .ui-kit-color-type__block-types{\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-top: 19px;\r\n    min-width: 200px;\r\n\r\n    .ui-kit-color-type__item-type{\r\n      display: flex;\r\n      margin: 25px 0;\r\n\r\n      .ui-kit-color-type__type-tag{\r\n        display: flex;\r\n        color: rgba(31, 32, 65, 0.25);\r\n        margin-right: 30px;\r\n        font-family: Montserrat, Arial, sans-serif;\r\n        width: 40px;\r\n        justify-content: flex-end;\r\n        align-items: left;\t\t\t\r\n      }\r\n\r\n      .ui-kit-color-type__type-text{\r\n        width: 387px;\t\t\t\t\t\r\n      }\r\n\r\n      h1{\r\n\r\n        &.ui-kit-color-type__type-text{\r\n          font-size: 25.5px;\r\n        }\r\n      }\r\n\r\n      h2{\r\n\r\n        &.ui-kit-color-type__type-text{\r\n          font-size: 20px;\r\n        }\r\n      }\r\n\r\n      h3{\r\n\r\n        &.ui-kit-color-type__type-text{\r\n          font-size: 12.5px;\r\n        }\r\n      }\r\n\r\n      p{\r\n        margin: -1px 0;\r\n        \r\n        &.ui-kit-color-type__type-text{\r\n          width: 315px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}"],sourceRoot:""}]);const c=l},6647:(r,t,o)=>{o.d(t,{Z:()=>k});var e=o(4015),n=o.n(e),i=o(3645),l=o.n(i),c=o(1667),a=o.n(c),p=o(3988),s=o(7771),u=o(7869),A=l()(n()),y=a()(p),f=a()(s),d=a()(u);A.push([r.id,"/*Montserrat*/\r\n\r\n@font-face {\r\n  font-family: 'Montserrat';\r\n  src: local('Montserrat Regular'), local('Montserrat-Regular'),\r\n  url("+y+") format('woff2'), \r\n  url("+f+") format('woff'), \r\n  url("+d+") format('truetype');\r\n  font-weight: 100;\r\n  font-style: normal;\r\n  font-size: 13.7px;\r\n}","",{version:3,sources:["webpack://./src/font/fonts.css"],names:[],mappings:"AAAA,aAAa;;AAEb;EACE,yBAAyB;EACzB;;;4DAGqE;EACrE,gBAAgB;EAChB,kBAAkB;EAClB,iBAAiB;AACnB",sourcesContent:["/*Montserrat*/\r\n\r\n@font-face {\r\n  font-family: 'Montserrat';\r\n  src: local('Montserrat Regular'), local('Montserrat-Regular'),\r\n  url('./montserrat-regular/montserrat-regular.woff2') format('woff2'), \r\n  url('./montserrat-regular/montserrat-regular.woff') format('woff'), \r\n  url('./montserrat-regular/montserrat-regular.ttf') format('truetype');\r\n  font-weight: 100;\r\n  font-style: normal;\r\n  font-size: 13.7px;\r\n}"],sourceRoot:""}]);const k=A},3645:r=>{r.exports=function(r){var t=[];return t.toString=function(){return this.map((function(t){var o=r(t);return t[2]?"@media ".concat(t[2]," {").concat(o,"}"):o})).join("")},t.i=function(r,o,e){"string"==typeof r&&(r=[[null,r,""]]);var n={};if(e)for(var i=0;i<this.length;i++){var l=this[i][0];null!=l&&(n[l]=!0)}for(var c=0;c<r.length;c++){var a=[].concat(r[c]);e&&n[a[0]]||(o&&(a[2]?a[2]="".concat(o," and ").concat(a[2]):a[2]=o),t.push(a))}},t}},4015:r=>{function t(r,t){(null==t||t>r.length)&&(t=r.length);for(var o=0,e=new Array(t);o<t;o++)e[o]=r[o];return e}r.exports=function(r){var o,e,n=(e=4,function(r){if(Array.isArray(r))return r}(o=r)||function(r,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(r)){var o=[],e=!0,n=!1,i=void 0;try{for(var l,c=r[Symbol.iterator]();!(e=(l=c.next()).done)&&(o.push(l.value),!t||o.length!==t);e=!0);}catch(r){n=!0,i=r}finally{try{e||null==c.return||c.return()}finally{if(n)throw i}}return o}}(o,e)||function(r,o){if(r){if("string"==typeof r)return t(r,o);var e=Object.prototype.toString.call(r).slice(8,-1);return"Object"===e&&r.constructor&&(e=r.constructor.name),"Map"===e||"Set"===e?Array.from(r):"Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e)?t(r,o):void 0}}(o,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),i=n[1],l=n[3];if("function"==typeof btoa){var c=btoa(unescape(encodeURIComponent(JSON.stringify(l)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(c),p="/*# ".concat(a," */"),s=l.sources.map((function(r){return"/*# sourceURL=".concat(l.sourceRoot||"").concat(r," */")}));return[i].concat(s).concat([p]).join("\n")}return[i].join("\n")}},1667:r=>{r.exports=function(r,t){return t||(t={}),"string"!=typeof(r=r&&r.__esModule?r.default:r)?r:(/^['"].*['"]$/.test(r)&&(r=r.slice(1,-1)),t.hash&&(r+=t.hash),/["'() \t\n]/.test(r)||t.needQuotes?'"'.concat(r.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):r)}},9620:(r,t,o)=>{o.r(t),o.d(t,{default:()=>l});var e=o(3379),n=o.n(e),i=o(4800);n()(i.Z,{insert:"head",singleton:!1});const l=i.Z.locals||{}},3129:(r,t,o)=>{o.r(t),o.d(t,{default:()=>l});var e=o(3379),n=o.n(e),i=o(5266);n()(i.Z,{insert:"head",singleton:!1});const l=i.Z.locals||{}},3071:(r,t,o)=>{o.r(t),o.d(t,{default:()=>l});var e=o(3379),n=o.n(e),i=o(6647);n()(i.Z,{insert:"head",singleton:!1});const l=i.Z.locals||{}},3379:(r,t,o)=>{var e,n=function(){var r={};return function(t){if(void 0===r[t]){var o=document.querySelector(t);if(window.HTMLIFrameElement&&o instanceof window.HTMLIFrameElement)try{o=o.contentDocument.head}catch(r){o=null}r[t]=o}return r[t]}}(),i=[];function l(r){for(var t=-1,o=0;o<i.length;o++)if(i[o].identifier===r){t=o;break}return t}function c(r,t){for(var o={},e=[],n=0;n<r.length;n++){var c=r[n],a=t.base?c[0]+t.base:c[0],p=o[a]||0,s="".concat(a," ").concat(p);o[a]=p+1;var u=l(s),A={css:c[1],media:c[2],sourceMap:c[3]};-1!==u?(i[u].references++,i[u].updater(A)):i.push({identifier:s,updater:d(A,t),references:1}),e.push(s)}return e}function a(r){var t=document.createElement("style"),e=r.attributes||{};if(void 0===e.nonce){var i=o.nc;i&&(e.nonce=i)}if(Object.keys(e).forEach((function(r){t.setAttribute(r,e[r])})),"function"==typeof r.insert)r.insert(t);else{var l=n(r.insert||"head");if(!l)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");l.appendChild(t)}return t}var p,s=(p=[],function(r,t){return p[r]=t,p.filter(Boolean).join("\n")});function u(r,t,o,e){var n=o?"":e.media?"@media ".concat(e.media," {").concat(e.css,"}"):e.css;if(r.styleSheet)r.styleSheet.cssText=s(t,n);else{var i=document.createTextNode(n),l=r.childNodes;l[t]&&r.removeChild(l[t]),l.length?r.insertBefore(i,l[t]):r.appendChild(i)}}function A(r,t,o){var e=o.css,n=o.media,i=o.sourceMap;if(n?r.setAttribute("media",n):r.removeAttribute("media"),i&&"undefined"!=typeof btoa&&(e+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),r.styleSheet)r.styleSheet.cssText=e;else{for(;r.firstChild;)r.removeChild(r.firstChild);r.appendChild(document.createTextNode(e))}}var y=null,f=0;function d(r,t){var o,e,n;if(t.singleton){var i=f++;o=y||(y=a(t)),e=u.bind(null,o,i,!1),n=u.bind(null,o,i,!0)}else o=a(t),e=A.bind(null,o,t),n=function(){!function(r){if(null===r.parentNode)return!1;r.parentNode.removeChild(r)}(o)};return e(r),function(t){if(t){if(t.css===r.css&&t.media===r.media&&t.sourceMap===r.sourceMap)return;e(r=t)}else n()}}r.exports=function(r,t){(t=t||{}).singleton||"boolean"==typeof t.singleton||(t.singleton=(void 0===e&&(e=Boolean(window&&document&&document.all&&!window.atob)),e));var o=c(r=r||[],t);return function(r){if(r=r||[],"[object Array]"===Object.prototype.toString.call(r)){for(var e=0;e<o.length;e++){var n=l(o[e]);i[n].references--}for(var a=c(r,t),p=0;p<o.length;p++){var s=l(o[p]);0===i[s].references&&(i[s].updater(),i.splice(s,1))}o=a}}}},7869:(r,t,o)=>{r.exports=o.p+"317b418ed317e258b173.ttf"},7771:(r,t,o)=>{r.exports=o.p+"3db65dc4b858f0fed4fb.woff"},3988:(r,t,o)=>{r.exports=o.p+"8b56391ed36ea95337c6.woff2"}},t={};function o(e){var n=t[e];if(void 0!==n)return n.exports;var i=t[e]={id:e,exports:{}};return r[e](i,i.exports,o),i.exports}o.n=r=>{var t=r&&r.__esModule?()=>r.default:()=>r;return o.d(t,{a:t}),t},o.d=(r,t)=>{for(var e in t)o.o(t,e)&&!o.o(r,e)&&Object.defineProperty(r,e,{enumerable:!0,get:t[e]})},o.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(r){if("object"==typeof window)return window}}(),o.o=(r,t)=>Object.prototype.hasOwnProperty.call(r,t),o.r=r=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(r,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(r,"__esModule",{value:!0})},(()=>{var r;o.g.importScripts&&(r=o.g.location+"");var t=o.g.document;if(!r&&t&&(t.currentScript&&(r=t.currentScript.src),!r)){var e=t.getElementsByTagName("script");e.length&&(r=e[e.length-1].src)}if(!r)throw new Error("Automatic publicPath is not supported in this browser");r=r.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),o.p=r})(),o(3071),o(9620),o(3129)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,